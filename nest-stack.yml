services:
  nest:
    image: suhach0523/techeerism-nest:$IMAGE_TAG
    networks:
      - main-network
    environment:
      - DATABASE_URL=$DATABASE_URL
      - REDIS_HOST=$REDIS_HOST
      - REDIS_PORT=$REDIS_PORT
      - REDIS_PASSWORD=$REDIS_PASSWORD
      - EMAIL_USER=$EMAIL_USER
      - EMAIL_PASS=$EMAIL_PASS
      - JWT_SECRET=$JWT_SECRET
      - SLACK=$SLACK_SECRET
      - RABBITMQ_HOST=$RABBITMQ_HOST
      - RABBITMQ_DEFAULT_USER=$RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS=$RABBITMQ_DEFAULT_PASS
      - SWAGGER_USER=$SWAGGER_USER
      - SWAGGER_PASSWORD=$SWAGGER_PASSWORD
      - AWS_S3_ACCESS_KEY=$AWS_S3_ACCESS_KEY
      - AWS_S3_SECRET_ACCESS_KEY=$AWS_S3_SECRET_ACCESS_KEY
      - AWS_S3_BUCKET_NAME=$AWS_S3_BUCKET_NAME
      - AWS_REGION=$AWS_REGION
    deploy:
      replicas: $SERVICE_REPLICAS
      placement:
        constraints:
          - node.labels.instance == main
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 60s
      rollback_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 1m
      labels:
        - traefik.enable=true
        - traefik.http.services.nest.loadbalancer.server.port=8000
        - traefik.http.routers.nest.entrypoints=websecure
        - traefik.http.routers.nest.rule=Host(`api.techeerzip.cloud`) && PathPrefix(`/api/v1`)
        # - traefik.http.routers.nest.middlewares=nest-stripprefix
        # - traefik.http.middlewares.nest-stripprefix.stripprefix.prefixes=/api/v1
        - traefik.http.routers.nest.tls.certresolver=letsencrypt

networks:
  main-network:
    external: true
